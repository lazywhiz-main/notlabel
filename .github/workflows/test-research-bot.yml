name: Test Research Bot

on:
  # 手動実行専用
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'テストモード'
        required: true
        default: 'dry-run'
        type: choice
        options:
        - dry-run
        - test-post
        - full-test
      
      max_articles:
        description: '処理する最大記事数'
        required: false
        default: '3'
        type: string

env:
  NODE_VERSION: '18'

jobs:
  test-bot:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Validate environment setup
      run: |
        echo "🔍 環境変数の確認中..."
        
        # 必須環境変数の確認
        if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
          echo "❌ OPENAI_API_KEY が設定されていません"
          exit 1
        else
          echo "✅ OPENAI_API_KEY 設定済み"
        fi
        
        if [ -z "${{ secrets.MICROCMS_API_KEY }}" ]; then
          echo "❌ MICROCMS_API_KEY が設定されていません"
          exit 1
        else
          echo "✅ MICROCMS_API_KEY 設定済み"
        fi
        
        if [ -z "${{ secrets.MICROCMS_SERVICE_DOMAIN }}" ]; then
          echo "❌ MICROCMS_SERVICE_DOMAIN が設定されていません"
          exit 1
        else
          echo "✅ MICROCMS_SERVICE_DOMAIN 設定済み"
        fi
        
        # オプション環境変数の確認
        if [ -n "${{ secrets.TWITTER_API_KEY }}" ]; then
          echo "✅ Twitter API 設定済み"
        else
          echo "⚠️ Twitter API 未設定（Google Sheets使用）"
        fi
        
        if [ -n "${{ secrets.WEBHOOK_URL }}" ]; then
          echo "✅ Webhook URL 設定済み"
        else
          echo "⚠️ Webhook URL 未設定"
        fi
        
    - name: Setup test environment
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
        echo "MICROCMS_API_KEY=${{ secrets.MICROCMS_API_KEY }}" >> $GITHUB_ENV
        echo "MICROCMS_SERVICE_DOMAIN=${{ secrets.MICROCMS_SERVICE_DOMAIN }}" >> $GITHUB_ENV
        echo "TWITTER_API_KEY=${{ secrets.TWITTER_API_KEY }}" >> $GITHUB_ENV
        echo "TWITTER_API_SECRET=${{ secrets.TWITTER_API_SECRET }}" >> $GITHUB_ENV
        echo "TWITTER_ACCESS_TOKEN=${{ secrets.TWITTER_ACCESS_TOKEN }}" >> $GITHUB_ENV
        echo "TWITTER_ACCESS_TOKEN_SECRET=${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}" >> $GITHUB_ENV
        echo "SITE_URL=${{ secrets.SITE_URL }}" >> $GITHUB_ENV
        echo "WEBHOOK_URL=${{ secrets.WEBHOOK_URL }}" >> $GITHUB_ENV
        echo "TEST_MODE=${{ github.event.inputs.test_mode }}" >> $GITHUB_ENV
        echo "MAX_ARTICLES=${{ github.event.inputs.max_articles }}" >> $GITHUB_ENV
        
    - name: Run template tests
      run: |
        echo "🧪 テンプレートシステムのテスト実行中..."
        npm run bot:test || echo "⚠️ テンプレートテストでエラーが発生しましたが続行します"
        
    - name: Run bot test
      run: |
        echo "🤖 ボットのテスト実行中..."
        echo "テストモード: ${{ github.event.inputs.test_mode }}"
        echo "最大記事数: ${{ github.event.inputs.max_articles }}"
        
        case "${{ github.event.inputs.test_mode }}" in
          "dry-run")
            echo "🔍 ドライランモード（実際の投稿なし）"
            npm run bot:debug
            ;;
          "test-post")
            echo "📝 テスト投稿モード（1件のみ投稿）"
            npm run bot
            ;;
          "full-test")
            echo "🚀 フルテストモード"
            npm run bot
            ;;
          *)
            echo "❌ 不明なテストモード: ${{ github.event.inputs.test_mode }}"
            exit 1
            ;;
        esac
      env:
        TZ: Asia/Tokyo
        
    - name: Validate results
      if: always()
      run: |
        echo "📊 実行結果の検証中..."
        
        # ログファイルの確認
        if [ -f "bot.log" ]; then
          echo "✅ ログファイルが生成されました"
          echo "📄 ログの最後の10行:"
          tail -10 bot.log
        else
          echo "⚠️ ログファイルが見つかりません"
        fi
        
        # エラーログの確認
        if [ -f "error.log" ]; then
          echo "❌ エラーログが検出されました:"
          cat error.log
        else
          echo "✅ エラーログはありません"
        fi
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ github.event.inputs.test_mode }}-${{ github.run_number }}
        path: |
          logs/
          *.log
          test-results/
        retention-days: 3
        
    - name: Test summary
      if: always()
      run: |
        echo "## 🧪 テスト実行サマリー" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **テストモード**: ${{ github.event.inputs.test_mode }}" >> $GITHUB_STEP_SUMMARY
        echo "- **最大記事数**: ${{ github.event.inputs.max_articles }}" >> $GITHUB_STEP_SUMMARY
        echo "- **実行日時**: $(date '+%Y-%m-%d %H:%M:%S JST')" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ job.status }}" = "success" ]; then
          echo "✅ **テスト結果**: 成功" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **テスト結果**: 失敗" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "詳細なログはArtifactsからダウンロードできます。" >> $GITHUB_STEP_SUMMARY 